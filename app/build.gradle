apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'io.fabric'

android {
    compileSdkVersion 27
    defaultConfig {
        applicationId "com.hmmelton.releave"
        minSdkVersion 21
        targetSdkVersion 27
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = ["room.schemaLocation": "$projectDir/schemas".toString()]
            }
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

repositories {
    jcenter()
}

configurations {
    ktlint
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "com.android.support:appcompat-v7:${libraries.appcompat}"
    implementation "com.android.support:support-media-compat:${libraries.appcompat}"
    implementation "com.android.support:support-v4:${libraries.appcompat}"
    implementation "com.android.support:design:${libraries.appcompat}"
    implementation "com.android.support.constraint:constraint-layout:${libraries.constraintLayout}"

    implementation("com.crashlytics.sdk.android:crashlytics:${libraries.crashlytics}@aar") {
        transitive = true
    }

    // Play Services
    implementation "com.google.android.gms:play-services-auth:${libraries.playServicesAuth}"
    implementation "com.google.android.gms:play-services-location:${libraries.playServicesLoc}"
    implementation "com.google.android.gms:play-services-maps:${libraries.playServicesMaps}"
    implementation "com.google.android.gms:play-services-places:${libraries.playServicesPlaces}"

    // Kotlin
    ktlint "com.github.shyiko:ktlint:${libraries.ktlint}"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:${libraries.kotlin}"
    implementation "org.jetbrains.kotlin:kotlin-reflect:${libraries.kotlin}"

    // Architecture Components
    implementation "android.arch.lifecycle:extensions:${libraries.lifecycle}"
    kapt "android.arch.lifecycle:compiler:${libraries.lifecycle}"

    // Jake Wharton
    implementation "com.jakewharton.threetenabp:threetenabp:${libraries.threetenabp}"
    implementation "com.squareup.retrofit2:retrofit:${libraries.retrofit}"

    testImplementation "junit:junit:${libraries.jUnit}"

    androidTestImplementation "com.android.support.test:runner:${libraries.runner}"
    androidTestImplementation "com.android.support.test.espresso:espresso-core:${libraries.espresso}"
}

task('ktlint', type: JavaExec, group: 'verification') {
    description = 'Check Kotlin code style.'
    classpath = configurations.ktlint
    main = 'com.github.shyiko.ktlint.Main'
    args '--verbose', 'src/**/*.kt'
}
check.dependsOn ktlint

task('ktlintFormat', type: JavaExec, group: 'formatting') {
    description = 'Fix Kotlin code style deviations.'
    classpath = configurations.ktlint
    main = 'com.github.shyiko.ktlint.Main'
    args '-F', 'src/**/*.kt'
}

apply plugin: 'com.google.gms.google-services'
