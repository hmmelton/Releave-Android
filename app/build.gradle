apply plugin: 'com.android.application'
apply plugin: 'com.google.gms.google-services'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-android-extensions'

android {
    compileSdkVersion 29
    defaultConfig {
        applicationId 'com.releave.android'
        minSdkVersion 21
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    dataBinding {
        enabled = true
    }
    compileOptions {
        sourceCompatibility = 1.8
        targetCompatibility = 1.8
    }
    buildToolsVersion = '28.0.3'

    kotlinOptions {
        jvmTarget = "1.8"
    }
}

repositories {
    jcenter()
}

configurations {
    ktlint
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    // Kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'com.google.android.material:material:1.0.0'
    implementation 'androidx.annotation:annotation:1.1.0'
    implementation 'androidx.lifecycle:lifecycle-extensions:2.1.0'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    ktlint "com.github.shyiko:ktlint:${libraries.ktlint}"

    // Firebase
    implementation "com.google.firebase:firebase-auth:${libraries.firebase.auth}"
    implementation "com.google.firebase:firebase-analytics:${libraries.firebase.analytics}"
    implementation "com.google.firebase:firebase-dynamic-links:${libraries.firebase.dynamiclink}"
    implementation "com.google.firebase:firebase-firestore:${libraries.firebase.firestore}"

    // ReactiveX
    implementation "io.reactivex.rxjava2:rxandroid:${libraries.reactive.android}"
    implementation "io.reactivex.rxjava2:rxjava:${libraries.reactive.java}"

    // Dagger
    implementation "com.google.dagger:dagger:${libraries.dagger}"
    implementation "com.google.dagger:dagger-android:${libraries.dagger}"
    implementation "com.google.dagger:dagger-android-support:${libraries.dagger}"
    kapt "com.google.dagger:dagger-compiler:${libraries.dagger}"
    kapt "com.google.dagger:dagger-android-processor:${libraries.dagger}"

    // Jetpack
    implementation "androidx.lifecycle:lifecycle-extensions:${libraries.lifecycle_version}"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:${libraries.lifecycle_version}"
    implementation "androidx.navigation:navigation-fragment-ktx:${libraries.androidx.nav_version}"
    implementation "androidx.navigation:navigation-ui-ktx:${libraries.androidx.nav_version}"
    implementation "androidx.preference:preference-ktx:${libraries.androidx.preferences}"

    // JAX-B dependencies for JDK 9+
    implementation "javax.xml.bind:jaxb-api:${libraries.jaxb}"
    implementation "com.sun.xml.bind:jaxb-core:${libraries.jaxb}"
    implementation "com.sun.xml.bind:jaxb-impl:${libraries.jaxb}"

    implementation "javax.activation:activation:${libraries.javax_activation}"

    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'

    testImplementation 'junit:junit:4.12'
    androidTestImplementation "androidx.test.ext:junit:${libraries.androidx.junit}"
    androidTestImplementation "androidx.test.espresso:espresso-core:${libraries.androidx.espresso_core}"
}

gradle.projectsEvaluated {
    tasks.withType(JavaCompile) {
        options.compilerArgs << "-Xmaxerrs" << "500"
    }
}

task('ktlint', type: JavaExec, group: 'verification') {
    description = 'Check Kotlin code style.'
    classpath = configurations.ktlint
    main = 'com.github.shyiko.ktlint.Main'
    args '--verbose', 'src/**/*.kt'
}
check.dependsOn ktlint

task('ktlintFormat', type: JavaExec, group: 'formatting') {
    description = 'Fix Kotlin code style deviations.'
    classpath = configurations.ktlint
    main = 'com.github.shyiko.ktlint.Main'
    args '-F', 'src/**/*.kt'
}
